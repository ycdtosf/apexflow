[{"parameters":[{"label":"maxWidth","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"abbreviate","inputType":"String","isStatic":false,"outputType":"String","description":"Returns an abbreviated version of the String, of the specified length and with ellipses appended if the current String is longer than the specified length; otherwise, returns the original String without ellipses."},{"parameters":[{"label":"maxWidth","dataType":"Integer"},{"label":"offset","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"abbreviate","inputType":"String","isStatic":false,"outputType":"String","description":"Returns an abbreviated version of the String, starting at the specified character offset and of the specified length. The returned String has ellipses appended at the start and the end if characters have been removed at these locations."},{"parameters":[],"namespaceName":"System","className":"String","methodName":"capitalize","inputType":"String","isStatic":false,"outputType":"String","description":"Returns the current String with the first letter changed to title case."},{"parameters":[{"label":"size","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"center","inputType":"String","isStatic":false,"outputType":"String","description":"Returns a version of the current String of the specified size padded with spaces on the left and right, so that it appears in the center. If the specified size is smaller than the current String size, the entire String is returned without added spaces."},{"parameters":[{"label":"size","dataType":"Integer"},{"label":"paddingString","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"center","inputType":"String","isStatic":false,"outputType":"String","description":"Returns a version of the current String of the specified size padded with the specified String on the left and right, so that it appears in the center. If the specified size is smaller than the current String size, the entire String is returned without padding."},{"parameters":[{"label":"index","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"charAt","inputType":"String","isStatic":false,"outputType":"Integer"},{"parameters":[{"label":"index","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"codePointAt","inputType":"String","isStatic":false,"outputType":"Integer"},{"parameters":[{"label":"index","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"codePointBefore","inputType":"String","isStatic":false,"outputType":"Integer"},{"parameters":[{"label":"beginIndex","dataType":"Integer"},{"label":"endIndex","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"codePointCount","inputType":"String","isStatic":false,"outputType":"Integer"},{"parameters":[{"label":"secondString","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"compareTo","inputType":"String","isStatic":false,"outputType":"Integer","description":"Compares two strings lexicographically, based on the Unicode value of each character in the Strings."},{"parameters":[{"label":"substring","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"contains","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[{"label":"inputString","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"containsAny","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[{"label":"substring","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"containsIgnoreCase","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[{"label":"inputString","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"containsNone","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[{"label":"inputString","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"containsOnly","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"containsWhitespace","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[{"label":"substring","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"countMatches","inputType":"String","isStatic":false,"outputType":"Integer","description":"Returns the number of times the specified substring occurs in the current String."},{"parameters":[],"namespaceName":"System","className":"String","methodName":"deleteWhitespace","inputType":"String","isStatic":false,"outputType":"String","description":"Returns a version of the current String with all white space characters removed."},{"parameters":[{"label":"secondString","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"difference","inputType":"String","isStatic":false,"outputType":"String","description":"Returns the difference between the current String and the specified String."},{"parameters":[{"label":"suffix","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"endsWith","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[{"label":"suffix","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"endsWithIgnoreCase","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[{"label":"secondString","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"equals","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Deprecated. This method is replaced by "},{"parameters":[{"label":"stringOrId","dataType":"Object"}],"namespaceName":"System","className":"String","methodName":"equals","inputType":"String","isStatic":false,"outputType":"Boolean"},{"parameters":[{"label":"secondString","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"equalsIgnoreCase","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"escapeCsv","inputType":"String","isStatic":false,"outputType":"String","description":"Returns a String for a CSV column enclosed in double quotes, if required."},{"parameters":[],"namespaceName":"System","className":"String","methodName":"escapeEcmaScript","inputType":"String","isStatic":false,"outputType":"String","description":"Escapes the characters in the String using EcmaScript String rules."},{"parameters":[],"namespaceName":"System","className":"String","methodName":"escapeHtml3","inputType":"String","isStatic":false,"outputType":"String","description":"Escapes the characters in a String using HTML 3.0 entities."},{"parameters":[],"namespaceName":"System","className":"String","methodName":"escapeHtml4","inputType":"String","isStatic":false,"outputType":"String","description":"Escapes the characters in a String using HTML 4.0 entities."},{"parameters":[],"namespaceName":"System","className":"String","methodName":"escapeJava","inputType":"String","isStatic":false,"outputType":"String","description":"Returns a String whose characters are escaped using Java String rules. Characters escaped include quotes and control characters, such as tab, backslash, and carriage return characters."},{"parameters":[{"label":"stringToEscape","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"escapeSingleQuotes","inputType":"String","isStatic":true,"outputType":"String","description":"Returns a String with the escape character () added before any single quotation marks in the String "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"escapeUnicode","inputType":"String","isStatic":false,"outputType":"String","description":"Returns a String whose Unicode characters are escaped to a Unicode escape sequence."},{"parameters":[],"namespaceName":"System","className":"String","methodName":"escapeXml","inputType":"String","isStatic":false,"outputType":"String","description":"Escapes the characters in a String using XML entities."},{"parameters":[{"label":"stringToFormat","dataType":"String"},{"label":"formattingArguments","dataType":"Object[]"}],"namespaceName":"System","className":"String","methodName":"format","inputType":"String","isStatic":true,"outputType":"String","description":" "},{"parameters":[{"label":"charArray","dataType":"Integer[]"}],"namespaceName":"System","className":"String","methodName":"fromCharArray","inputType":"String","isStatic":true,"outputType":"String","description":"Returns a String from the values of the list of integers. "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"getChars","inputType":"String","isStatic":false,"outputType":"Integer[]"},{"parameters":[{"label":"strings","dataType":"String[]"}],"namespaceName":"System","className":"String","methodName":"getCommonPrefix","inputType":"String","isStatic":true,"outputType":"String","description":"Returns the initial sequence of characters as a String that is common to all the specified Strings."},{"parameters":[{"label":"stringToCompare","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"getLevenshteinDistance","inputType":"String","isStatic":false,"outputType":"Integer","description":"Returns the Levenshtein distance between the current String and the specified String."},{"parameters":[{"label":"stringToCompare","dataType":"String"},{"label":"threshold","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"getLevenshteinDistance","inputType":"String","isStatic":false,"outputType":"Integer","description":"Returns the Levenshtein distance between the current String and the specified String if it is less than or equal than the given threshold; otherwise, returns -1."},{"parameters":[],"namespaceName":"System","className":"String","methodName":"hashCode","inputType":"String","isStatic":false,"outputType":"Integer","description":"Returns a hash code value for this string. "},{"parameters":[{"label":"substring","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"indexOf","inputType":"String","isStatic":false,"outputType":"Integer","description":"Returns the index of the first occurrence of the specified substring. If the substring does not occur, this method returns -1."},{"parameters":[{"label":"substring","dataType":"String"},{"label":"index","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"indexOf","inputType":"String","isStatic":false,"outputType":"Integer","description":"Returns the zero-based index of the first occurrence of the specified substring from the point of the given index. If the substring does not occur, this method returns -1."},{"parameters":[{"label":"substring","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"indexOfAny","inputType":"String","isStatic":false,"outputType":"Integer","description":"Returns the zero-based index of the first occurrence of any character specified in the substring. If none of the characters occur, returns -1. "},{"parameters":[{"label":"substring","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"indexOfAnyBut","inputType":"String","isStatic":false,"outputType":"Integer","description":"Returns the zero-based index of the first occurrence of a character that is not in the specified substring. Otherwise, returns -1. "},{"parameters":[{"label":"character","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"indexOfChar","inputType":"String","isStatic":false,"outputType":"Integer"},{"parameters":[{"label":"character","dataType":"Integer"},{"label":"startIndex","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"indexOfChar","inputType":"String","isStatic":false,"outputType":"Integer"},{"parameters":[{"label":"stringToCompare","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"indexOfDifference","inputType":"String","isStatic":false,"outputType":"Integer","description":"Returns the zero-based index of the character where the current String begins to differ from the specified String."},{"parameters":[{"label":"substring","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"indexOfIgnoreCase","inputType":"String","isStatic":false,"outputType":"Integer","description":"Returns the zero-based index of the first occurrence of the specified substring without regard to case. If the substring does not occur, this method returns -1."},{"parameters":[{"label":"substring","dataType":"String"},{"label":"startPosition","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"indexOfIgnoreCase","inputType":"String","isStatic":false,"outputType":"Integer","description":"Returns the zero-based index of the first occurrence of the specified substring from the point of index "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"isAllLowerCase","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"isAllUpperCase","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"isAlpha","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"isAlphaSpace","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"isAlphanumeric","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"isAlphanumericSpace","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"isAsciiPrintable","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[{"label":"inputString","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"isBlank","inputType":"String","isStatic":true,"outputType":"Boolean","description":"Returns "},{"parameters":[{"label":"inputString","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"isEmpty","inputType":"String","isStatic":true,"outputType":"Boolean","description":"Returns "},{"parameters":[{"label":"inputString","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"isNotBlank","inputType":"String","isStatic":true,"outputType":"Boolean","description":"Returns "},{"parameters":[{"label":"inputString","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"isNotEmpty","inputType":"String","isStatic":true,"outputType":"Boolean","description":"Returns "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"isNumeric","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"isNumericSpace","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"isWhitespace","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[{"label":"iterableObj","dataType":"Object"},{"label":"separator","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"join","inputType":"String","isStatic":true,"outputType":"String","description":"Joins the elements of the specified iterable object, such as a List, into a single String separated by the specified separator."},{"parameters":[{"label":"substring","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"lastIndexOf","inputType":"String","isStatic":false,"outputType":"Integer","description":"Returns the index of the last occurrence of the specified substring. If the substring does not occur, this method returns -1."},{"parameters":[{"label":"substring","dataType":"String"},{"label":"endPosition","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"lastIndexOf","inputType":"String","isStatic":false,"outputType":"Integer","description":"Returns the index of the last occurrence of the specified substring, starting from the character at index 0 and ending at the specified index. "},{"parameters":[{"label":"character","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"lastIndexOfChar","inputType":"String","isStatic":false,"outputType":"Integer"},{"parameters":[{"label":"character","dataType":"Integer"},{"label":"endIndex","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"lastIndexOfChar","inputType":"String","isStatic":false,"outputType":"Integer"},{"parameters":[{"label":"substring","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"lastIndexOfIgnoreCase","inputType":"String","isStatic":false,"outputType":"Integer","description":"Returns the index of the last occurrence of the specified substring regardless of case. "},{"parameters":[{"label":"substring","dataType":"String"},{"label":"endPosition","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"lastIndexOfIgnoreCase","inputType":"String","isStatic":false,"outputType":"Integer","description":"Returns the index of the last occurrence of the specified substring regardless of case, starting from the character at index 0 and ending at the specified index. "},{"parameters":[{"label":"length","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"left","inputType":"String","isStatic":false,"outputType":"String","description":"Returns the leftmost characters of the current String of the specified length."},{"parameters":[{"label":"length","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"leftPad","inputType":"String","isStatic":false,"outputType":"String","description":"Returns the current String padded with spaces on the left and of the specified length. "},{"parameters":[{"label":"length","dataType":"Integer"},{"label":"padStr","dataType":"String"}],"namespaceName":"unique","className":"1309593708","inputType":"1309593708","isStatic":false,"outputType":"String","description":"Returns the current String padded with String "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"length","inputType":"String","isStatic":false,"outputType":"Integer","description":"Returns the number of 16-bit Unicode characters contained in the String."},{"parameters":[{"label":"startIndex","dataType":"Integer"},{"label":"length","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"mid","inputType":"String","isStatic":false,"outputType":"String","description":"Returns a new String that begins with the character at the specified zero-based "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"normalizeSpace","inputType":"String","isStatic":false,"outputType":"String","description":"Returns the current String with leading, trailing, and repeating white space characters removed. "},{"parameters":[{"label":"index","dataType":"Integer"},{"label":"codePointOffset","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"offsetByCodePoints","inputType":"String","isStatic":false,"outputType":"Integer"},{"parameters":[{"label":"substring","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"remove","inputType":"String","isStatic":false,"outputType":"String","description":"Removes all occurrences of the specified substring and returns the String result."},{"parameters":[{"label":"substring","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"removeEnd","inputType":"String","isStatic":false,"outputType":"String","description":"Removes the specified substring only if it occurs at the end of the String."},{"parameters":[{"label":"substring","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"removeEndIgnoreCase","inputType":"String","isStatic":false,"outputType":"String","description":"Removes the specified substring only if it occurs at the end of the String using a case-insensitive match."},{"parameters":[{"label":"substring","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"removeStart","inputType":"String","isStatic":false,"outputType":"String","description":"Removes the specified substring only if it occurs at the beginning of the String."},{"parameters":[{"label":"substring","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"removeStartIgnoreCase","inputType":"String","isStatic":false,"outputType":"String","description":"Removes the specified substring only if it occurs at the beginning of the String using a case-insensitive match."},{"parameters":[{"label":"numberOfTimes","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"repeat","inputType":"String","isStatic":false,"outputType":"String","description":"Returns the current String repeated the specified number of times. "},{"parameters":[{"label":"separator","dataType":"String"},{"label":"numberOfTimes","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"repeat","inputType":"String","isStatic":false,"outputType":"String","description":"Returns the current String repeated the specified number of times using the specified separator to separate the repeated Strings. "},{"parameters":[{"label":"target","dataType":"String"},{"label":"replacement","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"replace","inputType":"String","isStatic":false,"outputType":"String","description":"Replaces each substring of a string that matches the literal target sequence "},{"parameters":[{"label":"regExp","dataType":"String"},{"label":"replacement","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"replaceAll","inputType":"String","isStatic":false,"outputType":"String","description":"Replaces each substring of a string that matches the regular expression "},{"parameters":[{"label":"regExp","dataType":"String"},{"label":"replacement","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"replaceFirst","inputType":"String","isStatic":false,"outputType":"String","description":"Replaces the first substring of a string that matches the regular expression "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"reverse","inputType":"String","isStatic":false,"outputType":"String","description":"Returns a String with all the characters reversed."},{"parameters":[{"label":"length","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"right","inputType":"String","isStatic":false,"outputType":"String","description":"Returns the rightmost characters of the current String of the specified length."},{"parameters":[{"label":"length","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"rightPad","inputType":"String","isStatic":false,"outputType":"String","description":"Returns the current String padded with spaces on the right and of the specified length. "},{"parameters":[{"label":"length","dataType":"Integer"},{"label":"padStr","dataType":"String"}],"namespaceName":"unique","className":"2001841575","inputType":"2001841575","isStatic":false,"outputType":"String","description":"Returns the current String padded with String "},{"parameters":[{"label":"regExp","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"split","inputType":"String","isStatic":false,"outputType":"String[]","description":" "},{"parameters":[{"label":"regExp","dataType":"String"},{"label":"limit","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"split","inputType":"String","isStatic":false,"outputType":"String[]","description":"Returns a list that contains each substring of the String that is terminated by either the regular expression "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"splitByCharacterType","inputType":"String","isStatic":false,"outputType":"String[]","description":"Splits the current String by character type and returns a list of contiguous character groups of the same type as complete tokens."},{"parameters":[],"namespaceName":"System","className":"String","methodName":"splitByCharacterTypeCamelCase","inputType":"String","isStatic":false,"outputType":"String[]","description":"Splits the current String by character type and returns a list of contiguous character groups of the same type as complete tokens, with the following exception: the uppercase character, if any, immediately preceding a lowercase character token belongs to the following character token rather than to the preceding."},{"parameters":[{"label":"prefix","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"startsWith","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[{"label":"prefix","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"startsWithIgnoreCase","inputType":"String","isStatic":false,"outputType":"Boolean","description":"Returns "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"stripHtmlTags","inputType":"String","isStatic":false,"outputType":"String","description":"Removes HTML markup and returns plain text."},{"parameters":[{"label":"startIndex","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"substring","inputType":"String","isStatic":false,"outputType":"String","description":"Returns a new String that begins with the character at the specified zero-based "},{"parameters":[{"label":"startIndex","dataType":"Integer"},{"label":"endIndex","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"substring","inputType":"String","isStatic":false,"outputType":"String","description":"Returns a new String that begins with the character at the specified zero-based "},{"parameters":[{"label":"separator","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"substringAfter","inputType":"String","isStatic":false,"outputType":"String","description":"Returns the substring that occurs after the first occurrence of the specified separator."},{"parameters":[{"label":"separator","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"substringAfterLast","inputType":"String","isStatic":false,"outputType":"String","description":"Returns the substring that occurs after the last occurrence of the specified separator."},{"parameters":[{"label":"separator","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"substringBefore","inputType":"String","isStatic":false,"outputType":"String","description":"Returns the substring that occurs before the first occurrence of the specified separator."},{"parameters":[{"label":"separator","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"substringBeforeLast","inputType":"String","isStatic":false,"outputType":"String","description":"Returns the substring that occurs before the last occurrence of the specified separator."},{"parameters":[{"label":"tag","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"substringBetween","inputType":"String","isStatic":false,"outputType":"String","description":"Returns the substring that occurs between two instances of the specified "},{"parameters":[{"label":"open","dataType":"String"},{"label":"close","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"substringBetween","inputType":"String","isStatic":false,"outputType":"String","description":"Returns the substring that occurs between the two specified Strings."},{"parameters":[],"namespaceName":"System","className":"String","methodName":"swapCase","inputType":"String","isStatic":false,"outputType":"String","description":"Swaps the case of all characters and returns the resulting String by using the default (English US) locale. "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"toLowerCase","inputType":"String","isStatic":false,"outputType":"String","description":"Converts all of the characters in the String to lowercase using the rules of the default (English US) locale."},{"parameters":[{"label":"locale","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"toLowerCase","inputType":"String","isStatic":false,"outputType":"String","description":"Converts all of the characters in the String to lowercase using the rules of the specified locale."},{"parameters":[],"namespaceName":"System","className":"String","methodName":"toUpperCase","inputType":"String","isStatic":false,"outputType":"String","description":"Converts all of the characters in the String to uppercase using the rules of the default (English US) locale."},{"parameters":[{"label":"locale","dataType":"String"}],"namespaceName":"System","className":"String","methodName":"toUpperCase","inputType":"String","isStatic":false,"outputType":"String","description":"Converts all of the characters in the String to the uppercase using the rules of the specified locale. "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"trim","inputType":"String","isStatic":false,"outputType":"String","description":"Returns a copy of the string that no longer contains any leading or trailing white space characters. "},{"parameters":[],"namespaceName":"System","className":"String","methodName":"uncapitalize","inputType":"String","isStatic":false,"outputType":"String","description":"Returns the current String with the first letter in lowercase."},{"parameters":[],"namespaceName":"System","className":"String","methodName":"unescapeCsv","inputType":"String","isStatic":false,"outputType":"String","description":"Returns a String representing an unescaped CSV column."},{"parameters":[],"namespaceName":"System","className":"String","methodName":"unescapeEcmaScript","inputType":"String","isStatic":false,"outputType":"String","description":"Unescapes any EcmaScript literals found in the String."},{"parameters":[],"namespaceName":"System","className":"String","methodName":"unescapeHtml3","inputType":"String","isStatic":false,"outputType":"String","description":"Unescapes the characters in a String using HTML 3.0 entities."},{"parameters":[],"namespaceName":"System","className":"String","methodName":"unescapeHtml4","inputType":"String","isStatic":false,"outputType":"String","description":"Unescapes the characters in a String using HTML 4.0 entities."},{"parameters":[],"namespaceName":"System","className":"String","methodName":"unescapeJava","inputType":"String","isStatic":false,"outputType":"String","description":"Returns a String whose Java literals are unescaped. Literals unescaped include escape sequences for quotes () and control characters, such as tab (t), and carriage return (n)."},{"parameters":[],"namespaceName":"System","className":"String","methodName":"unescapeUnicode","inputType":"String","isStatic":false,"outputType":"String","description":"Returns a String whose escaped Unicode characters are unescaped."},{"parameters":[],"namespaceName":"System","className":"String","methodName":"unescapeXml","inputType":"String","isStatic":false,"outputType":"String","description":"Unescapes the characters in a String using XML entities."},{"parameters":[{"label":"dateToConvert","dataType":"Date"}],"namespaceName":"System","className":"String","methodName":"valueOf","inputType":"String","isStatic":true,"outputType":"String","description":"Returns a String that represents the specified Date in the standard “yyyy-MM-dd” format."},{"parameters":[{"label":"datetimeToConvert","dataType":"Datetime"}],"namespaceName":"System","className":"String","methodName":"valueOf","inputType":"String","isStatic":true,"outputType":"String","description":"Returns a String that represents the specified Datetime in the standard “yyyy-MM-dd HH:mm:ss” format for the local time zone."},{"parameters":[{"label":"decimalToConvert","dataType":"Decimal"}],"namespaceName":"System","className":"String","methodName":"valueOf","inputType":"String","isStatic":true,"outputType":"String","description":"Returns a String that represents the specified Decimal."},{"parameters":[{"label":"doubleToConvert","dataType":"Double"}],"namespaceName":"System","className":"String","methodName":"valueOf","inputType":"String","isStatic":true,"outputType":"String","description":"Returns a String that represents the specified Double."},{"parameters":[{"label":"integerToConvert","dataType":"Integer"}],"namespaceName":"System","className":"String","methodName":"valueOf","inputType":"String","isStatic":true,"outputType":"String","description":"Returns a String that represents the specified Integer."},{"parameters":[{"label":"longToConvert","dataType":"Long"}],"namespaceName":"System","className":"String","methodName":"valueOf","inputType":"String","isStatic":true,"outputType":"String","description":"Returns a String that represents the specified Long. "},{"parameters":[{"label":"toConvert","dataType":"Object"}],"namespaceName":"System","className":"String","methodName":"valueOf","inputType":"String","isStatic":true,"outputType":"String","description":"Returns a string representation of the specified object argument. "},{"parameters":[{"label":"datetimeToConvert","dataType":"Datetime"}],"namespaceName":"System","className":"String","methodName":"valueOfGmt","inputType":"String","isStatic":true,"outputType":"String","description":"Returns a String that represents the specified Datetime in the standard “yyyy-MM-dd HH:mm:ss” format for the GMT time zone."}]